Plany rozwoju programu UniLANChat. Niniejszy dokument jest luźnym planem, podane
tutaj powiązania numerów wersji z zakładanymi celami mogą się jeszcze zmienić.


0.3
 - podpowiedzi do opcji w ustawieniach
 - ostrzeżenie przy zamykaniu programu o nie ukończonych transferach
 - możliwość załączania plików do wiadomości przez drag&drop
 - uzupełnić komentarze w pakiecie views.swing
 - poprawić metody ChatTabs.getRoomPanel() i ChatRoomsView.getAnyUnread() oraz
   ogólnie przejrzeć te klasy
 - logowanie przebiegu rozmów, podgląd logów
 - bug: brak ostrzeżenia przy wysyłaniu zbyt długich wiadomości, program się
   w tym przypadku zazwyczaj zawiesza
 - rozszerzenie trybu debugmode o logowanie zdarzeń do pliku
 - do configure dodać więcej możliwych ścieżek do JDK, sprawdzanie ma obejmować
   także występowanie javac
 - konfiguracja: możliwość nie pokazywania okna transferów po zapisaniu
   załącznika

0.4
 - tylko jedna instancja programu
 - lista kontaktów: możliwość oznaczania kontaktów jako znajomych (na stałe na
   liście, można zmieniać nazwę kontaktu, oznaczeni np. gwiazdką)
 - lista kontaktów: oznaczanie kontaktów, z którymi występują problemy
   w transmisji (czyli są już w kolejce do oznaczenia jako niedostępni, ale
   jeszcze nie osiągnęli timeoutu)
 - ipmsg: szyfrowanie (wymaga znajomych na liście kontaktów), dodawanie kluczy
   publicznych do znajomych kontaktów
 - automatyczne uruchamianie wraz ze startem systemu
 - ipmsg: wykrywanie, lub ustawianie dla konkretnych kontaktów innych znaków
   cytujących (niektórzy ustawiają #, $, @, zamiast >). Wykrywanie klienta
   UniLANChat - wiadomości od nich nie są kompaktowane pod względem zawierania
   cytatów
 - reagowanie na wstrzymywanie (uśpienie) i wznawianie pracy komputera
 - obsłużyć wersję protokołu iptux ("1_iptux_0"), ten klient może wysyłać
   pakiety COMM_BR_ISGETLIST2
 - jeżeli tray jest nieobsługiwany, okno ma być widoczne po starcie programu,
   inny sposób obsługi zamykania okna kontaktów (wyłączenie programu?)
 - pod Win7 jeżeli przycisk ze statusami ma hover, jego tekst jest niewidoczny

1.0 (pierwsza wersja finalna)
 - wiele języków (przynajmniej Polski i Angielski)
 - obsługa przynajmniej jednego dodatkowego protokołu (np. LanChat, winpopup),
   panel zarządzania kontami
 - metakontakty
 - dodatkowy protokół, oparty o XML, pozwalający na przesyłanie dodatkowych
   informacji, np. o metakontaktach
 - bug: JEditorPane nie zawija zbyt szerokich wiadomości
 - bug: przy modyfikacji listy kontaktów może zmienić się zaznaczony kontakt -
   zaznaczony indeks pozostaje w miejscu, kontakty się przesuwają
 - wykrywanie (i oznaczanie) kontaktów, których firewall nie wpuszcza pakietów
 - powiadamianie o błędach tak, jak w pidginie (panel z komunikatem pod listą
   kontaktów)
 - wykrywanie lub zgadywanie, że ustawienia firewall lub NAT nie pozwalają na
   komunikację, informowanie o tym użytkownika
 - bug 001-linux-multiple-broadcast: problem z wykrywaniem adresów broadcast
   dla interfejsów posiadających wiele przypisanych adresów ip

1.1
 - blokowanie kontaktów
 - wskazywanie dodatkowych adresów IP, rozszerzających broadcast
 - przeciąganie zakładek z rozmowami (w celu zmiany ich kolejności)
 - implementacja wbudowanego klienta i serwera wymiany listy kontaktów ipmsg,
   wykorzystującego pakiety COMM_ANSLIST

dalsze wydania
 - interfejs tekstowy dla konsoli (ncurses, Charva)
 - prosty interfejs tekstowy (zapytania - odpowiedzi, obsługa tylko przez
   standardowe strumienie)
 - automatyczny routing: sieć sama powinna dbać o to, aby klienci, którzy nie
   widzą się nawzajem, mogli się ze sobą komunikować (poprzez wspólnych
   sąsiadów)
 - sieć wymiany plików, częściowo oparta o przesyłanie plików w implementowanych
   protokołach, aby oryginalni klienci mieli częściową możliwość korzystania
   z nich (np. poprzez polecenia tekstowe). W protokole iptux obsłużyć polecenie
   pobrania listy udostępnianych plików (id polecenia to 0xFF)
 - komunikacja głosowa
 - tablica ogłoszeń, na której może publikować każdy użytkownik, a wyświetla
   się (i aktualizuje?) na początku pokoju publicznego
 - bug: TrayIcon nie używa swingowego menu
 - protokół korzystający z samej warstwy łącza danych (MAC), pozwalający na
   komunikację bez skonfigurowanej warstwy sieciowej (IP)
